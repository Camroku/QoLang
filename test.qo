println("QoLang test");
println("-------------------------------");

/*
Function declaration, printing, input and if-elif-else statements
*/

func: print_text[whichone]{
  if (whichone == 1) { /* note the ". "1" and 1 are not the same. */
    println("Hello, world!");
  } else if (whichone == 2) {
    println("Hello, QoLang!");
  } else if (whichone == 3) {
    println("Hello, Camroku.TECH!");
  } else {
    println("Invalid input!");
    exit(1);
  };
};

println("commands:");
println("  1  print 'Hello, world!'");
println("  2  print 'Hello, QoLang!'");
println("  3  print 'Hello, Camroku.TECH!'");
in := "";
input("> ", &in);
toInt(in, &in);
print_text(in);

println("-------------------------------");
/*
Get type of something
*/

test1 := 123;
test1_out := "";
test2 := "hello";
test2_out := "";
test3 := True;
test3_out := "";

type(test1, &test1_out);
type(test2, &test2_out);
type(test3, &test3_out);

println(test1, "->", test1_out);
println(test2, "->", test2_out);
println(test3, "->", test3_out);

println("-------------------------------");
/*
Loops
*/

print("Some numbers printed with for loop: ");
for(i := 0; i < 5; i := i + 1){
  print(i);
};
println("");

print("Some numbers printed with while loop: ");
i := 0;
while(i < 5){
  print(i);
  i := i + 1;
};
println("");

print("Some numbers printed with times loop: ");
i := 0;
times 5{
  print(i);
  i := i + 1;
};
println("");


print("Some numbers printed with times as loop: ");
times 5 as &i{
  print(i);
};
println("");

println("-------------------------------");
/*
`&&` and `||` boolean operators
*/

btest1 := "";

input("Enter a number: ", &btest1);
toInt(btest1, &btest1);
if(btest1 >= 1 && btest1 <= 10){
  println("Your number is between 1 and 10.");
} else {
  println("Your number is not between 1 and 10.");
};

btest2 := "";

input("Enter a number: ", &btest2);
toInt(btest2, &btest2);
if(btest2 >= 20 || btest2 <= 10){
  println("Your number is bigger than 20 or smaller than 10.");
} else {
  println("Your number is not bigger than 20 or smaller than 10.");
};

println("-------------------------------");
/*
Formatted strings
*/

testvar := "test variable content";

println(%"All these text are printed with a single println function.\n" +
        %"This is another line printed with \\n.\n" +
        %"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r" +
        %"This text is printed after a lot of characters using \\r \n" +
        "This text will not be formatted. \rTest" + %"\n" +
        %"This is a variable used in a fstring: $testvar\n" +
        %"This is an escaped variable: \$testvar");